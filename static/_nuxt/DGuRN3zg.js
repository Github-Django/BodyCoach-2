import{d as I,ad as D,ae as P,ab as V,r as p,aa as T,F as A,o as s,c as m,N as r,g as l,C as h,e as k,t as v,K as c,a as b,D as F,y as j,b as f,w as E,_ as H,au as K,af as q,M as g}from"./BcqZkZus.js";/* empty css        */const G=["for"],J={class:"nui-input-file-outer"},O=["for"],Q={key:0,class:"text-xs"},W={class:"nui-input-file-text"},X=["id"],Y={key:0,class:"nui-input-file-placeload"},Z=I({inheritAttrs:!1,__name:"BaseInputFile",props:D({id:{default:void 0},label:{default:void 0},icon:{default:void 0},placeholder:{default:void 0},error:{type:[String,Boolean],default:!1},colorFocus:{type:Boolean},loading:{type:Boolean},textValue:{type:Function,default:void 0},contrast:{default:void 0},rounded:{default:void 0},size:{default:void 0},i18n:{default:void 0},classes:{default:()=>({})}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(y,{expose:_}){const e=y,[u]=P(y,"modelValue"),d=V(e,"BaseInputFile","contrast"),i=V(e,"BaseInputFile","rounded"),x=V(e,"BaseInputFile","size"),n=V(e,"BaseInputFile","i18n"),a=p(),o=T(()=>e.id),R=t=>t?.item?.length?t?.item.length===1?t.item(0)?.name??n.value.invalid:n.value.multiple.replaceAll("{count}",String(t?.item?.length??0)):n.value.empty,$={none:"",sm:"nui-input-rounded-sm",md:"nui-input-rounded-md",lg:"nui-input-rounded-lg",full:"nui-input-rounded-full"},N={sm:"nui-input-sm",md:"nui-input-md",lg:"nui-input-lg"},C={default:"nui-input-default","default-contrast":"nui-input-default-contrast"},z=A(()=>e.textValue?e.textValue(u.value):R(u.value));return _({el:a,id:o}),(t,B)=>{const U=H,w=K,M=q;return s(),m("div",{class:r(["nui-input-file-regular",[l(d)&&C[l(d)],l(x)&&N[l(x)],l(i)&&$[l(i)],e.error&&!e.loading&&"nui-input-file-error",e.loading&&"nui-input-file-loading",e.icon&&"nui-has-icon",e.colorFocus&&"nui-input-file-color-focus",e.classes?.wrapper]])},["label"in t.$slots||e.label?(s(),m("label",{key:0,class:r(["nui-input-file-label",e.classes?.label]),for:l(o)},[h(t.$slots,"label",{},()=>[k(v(e.label),1)])],10,G)):c("",!0),b("div",J,[b("label",{tabindex:"0",class:r(["nui-input-file-inner",[e.classes?.input]]),for:l(o)},[e.placeholder||e.icon||"icon"in t.$slots?(s(),m("div",{key:0,class:r(["nui-input-file-addon",e.classes?.text])},[e.placeholder?(s(),m("span",Q,v(e.placeholder),1)):c("",!0),h(t.$slots,"icon",{},()=>[e.icon?(s(),F(U,{key:0,name:e.icon,class:r(e.classes?.icon)},null,8,["name","class"])):c("",!0)])],2)):c("",!0),b("div",W,v(l(z)),1),b("input",j({id:l(o),ref_key:"inputRef",ref:a,type:"file"},t.$attrs,{class:"hidden",onChange:B[0]||(B[0]=S=>u.value=S.target.files)}),null,16,X)],10,O),e.loading?(s(),m("div",Y,[f(w,{class:"nui-placeload"})])):c("",!0),e.error&&typeof e.error=="string"?(s(),F(M,{key:1,color:"danger",class:r(e.classes?.error)},{default:E(()=>[k(v(e.error),1)]),_:1},8,["class"])):c("",!0)])],2)}}}),L={class:"grid gap-6 md:max-w-4xl md:grid-cols-3"},ne=I({__name:"shapes",setup(y){const _=p(null),e=p(null),u=p(null),d=p(null),i=p(null);return(x,n)=>{const a=Z;return s(),m("div",L,[f(a,{modelValue:l(_),"onUpdate:modelValue":n[0]||(n[0]=o=>g(_)?_.value=o:null),rounded:"none",label:"Rounded: none"},null,8,["modelValue"]),f(a,{modelValue:l(e),"onUpdate:modelValue":n[1]||(n[1]=o=>g(e)?e.value=o:null),rounded:"sm",label:"Rounded: sm"},null,8,["modelValue"]),f(a,{modelValue:l(u),"onUpdate:modelValue":n[2]||(n[2]=o=>g(u)?u.value=o:null),rounded:"md",label:"Rounded: md"},null,8,["modelValue"]),f(a,{modelValue:l(d),"onUpdate:modelValue":n[3]||(n[3]=o=>g(d)?d.value=o:null),rounded:"lg",label:"Rounded: lg"},null,8,["modelValue"]),f(a,{modelValue:l(i),"onUpdate:modelValue":n[4]||(n[4]=o=>g(i)?i.value=o:null),rounded:"full",label:"Rounded: full"},null,8,["modelValue"])])}}});export{ne as default};
